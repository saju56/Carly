# Description how to deploy to aws https://www.callicoder.com/deploy-host-spring-boot-apps-on-aws-using-elastic-beanstalk/
# Description how to connect pgAdmin to remote db https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ConnectToPostgreSQLInstance.html

# Listen on the port passed through `PORT` environment variable (Fallback to 8080)
server.port= ${PORT:8080}

spring.datasource.url= jdbc:postgresql://${rds.hostname}:${rds.port}/${rds.db.name}
spring.datasource.username= ${rds.username}
spring.datasource.password= ${rds.password}
spring.sql.init.mode= always
spring.sql.init.continue-on-error= true
spring.sql.init.platform= postgresql
#if you want ot upload test data create data.sql. if below is uncommented then data.sql will be executed
spring.sql.init.schema-locations= classpath:/sql/schema-${spring.datasource.platform}.sql

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
# Hibernate ddl auto (none, create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto= none
spring.jpa.show-sql= false
spring.jpa.generate-ddl= true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true

## MULTIPART (MultipartProperties)
spring.servlet.multipart.enabled= true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold= 2KB
# Max file size.
spring.servlet.multipart.max-file-size= 200MB
# Max Request Size
spring.servlet.multipart.max-request-size= 215MB

# Actuator
management.endpoints.enabled-by-default=false
management.endpoint.health.enabled=true
# http://localhost:8080/actuator/env/spring.profiles.active
management.endpoint.env.enabled=true
management.endpoints.web.exposure.include=health,env

# Logger
logging.level.pw.react.backend=INFO
# CORS
cors.urls=${cors.urls}